/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1beta1

import (
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
	v1beta1 "sigs.k8s.io/azuredisk-csi-driver/pkg/apis/azuredisk/v1beta1"
)

// AzVolumeLister helps list AzVolumes.
// All objects returned here must be treated as read-only.
type AzVolumeLister interface {
	// List lists all AzVolumes in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1beta1.AzVolume, err error)
	// AzVolumes returns an object that can list and get AzVolumes.
	AzVolumes(namespace string) AzVolumeNamespaceLister
	AzVolumeListerExpansion
}

// azVolumeLister implements the AzVolumeLister interface.
type azVolumeLister struct {
	indexer cache.Indexer
}

// NewAzVolumeLister returns a new AzVolumeLister.
func NewAzVolumeLister(indexer cache.Indexer) AzVolumeLister {
	return &azVolumeLister{indexer: indexer}
}

// List lists all AzVolumes in the indexer.
func (s *azVolumeLister) List(selector labels.Selector) (ret []*v1beta1.AzVolume, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1beta1.AzVolume))
	})
	return ret, err
}

// AzVolumes returns an object that can list and get AzVolumes.
func (s *azVolumeLister) AzVolumes(namespace string) AzVolumeNamespaceLister {
	return azVolumeNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AzVolumeNamespaceLister helps list and get AzVolumes.
// All objects returned here must be treated as read-only.
type AzVolumeNamespaceLister interface {
	// List lists all AzVolumes in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1beta1.AzVolume, err error)
	// Get retrieves the AzVolume from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1beta1.AzVolume, error)
	AzVolumeNamespaceListerExpansion
}

// azVolumeNamespaceLister implements the AzVolumeNamespaceLister
// interface.
type azVolumeNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AzVolumes in the indexer for a given namespace.
func (s azVolumeNamespaceLister) List(selector labels.Selector) (ret []*v1beta1.AzVolume, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1beta1.AzVolume))
	})
	return ret, err
}

// Get retrieves the AzVolume from the indexer for a given namespace and name.
func (s azVolumeNamespaceLister) Get(name string) (*v1beta1.AzVolume, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1beta1.Resource("azvolume"), name)
	}
	return obj.(*v1beta1.AzVolume), nil
}
