/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha2

import (
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
	v1alpha2 "sigs.k8s.io/azuredisk-csi-driver/pkg/apis/azuredisk/v1alpha2"
)

// AzVolumeAttachmentLister helps list AzVolumeAttachments.
// All objects returned here must be treated as read-only.
type AzVolumeAttachmentLister interface {
	// List lists all AzVolumeAttachments in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha2.AzVolumeAttachment, err error)
	// AzVolumeAttachments returns an object that can list and get AzVolumeAttachments.
	AzVolumeAttachments(namespace string) AzVolumeAttachmentNamespaceLister
	AzVolumeAttachmentListerExpansion
}

// azVolumeAttachmentLister implements the AzVolumeAttachmentLister interface.
type azVolumeAttachmentLister struct {
	indexer cache.Indexer
}

// NewAzVolumeAttachmentLister returns a new AzVolumeAttachmentLister.
func NewAzVolumeAttachmentLister(indexer cache.Indexer) AzVolumeAttachmentLister {
	return &azVolumeAttachmentLister{indexer: indexer}
}

// List lists all AzVolumeAttachments in the indexer.
func (s *azVolumeAttachmentLister) List(selector labels.Selector) (ret []*v1alpha2.AzVolumeAttachment, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha2.AzVolumeAttachment))
	})
	return ret, err
}

// AzVolumeAttachments returns an object that can list and get AzVolumeAttachments.
func (s *azVolumeAttachmentLister) AzVolumeAttachments(namespace string) AzVolumeAttachmentNamespaceLister {
	return azVolumeAttachmentNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AzVolumeAttachmentNamespaceLister helps list and get AzVolumeAttachments.
// All objects returned here must be treated as read-only.
type AzVolumeAttachmentNamespaceLister interface {
	// List lists all AzVolumeAttachments in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha2.AzVolumeAttachment, err error)
	// Get retrieves the AzVolumeAttachment from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha2.AzVolumeAttachment, error)
	AzVolumeAttachmentNamespaceListerExpansion
}

// azVolumeAttachmentNamespaceLister implements the AzVolumeAttachmentNamespaceLister
// interface.
type azVolumeAttachmentNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AzVolumeAttachments in the indexer for a given namespace.
func (s azVolumeAttachmentNamespaceLister) List(selector labels.Selector) (ret []*v1alpha2.AzVolumeAttachment, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha2.AzVolumeAttachment))
	})
	return ret, err
}

// Get retrieves the AzVolumeAttachment from the indexer for a given namespace and name.
func (s azVolumeAttachmentNamespaceLister) Get(name string) (*v1alpha2.AzVolumeAttachment, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha2.Resource("azvolumeattachment"), name)
	}
	return obj.(*v1alpha2.AzVolumeAttachment), nil
}
