{{- if .Values.linux.enabled}}
kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: {{ .Values.linux.dsName }}
  namespace: {{ .Release.Namespace }}
{{ include "azuredisk.labels" . | indent 2 }}
spec:
  selector:
    matchLabels:
      app: {{ .Values.linux.dsName }}
  template:
    metadata:
{{ include "azuredisk.labels" . | indent 6 }}
        app: {{ .Values.linux.dsName }}
{{- with .Values.linux.podLabels }}
{{ toYaml . | indent 8 }}
{{- end }}
    spec:
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.imagePullSecrets | indent 8 }}
      {{- end }}
      hostNetwork: {{ .Values.linux.hostNetwork }}
      dnsPolicy: ClusterFirstWithHostNet
      serviceAccountName: {{ .Values.serviceAccount.node }}
      nodeSelector:
        kubernetes.io/os: linux
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: type
                    operator: NotIn
                    values:
                      - virtual-kubelet
      priorityClassName: system-node-critical
{{- with .Values.linux.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
{{- end }}
      {{- include "azuredisk.pullSecrets" . | indent 6 }}
      containers:
        - name: liveness-probe
          volumeMounts:
            - mountPath: /csi
              name: socket-dir
          image: "{{ .Values.image.livenessProbe.repository }}:{{ .Values.image.livenessProbe.tag }}"
          args:
            - --csi-address=/csi/csi.sock
            - --probe-timeout=3s
            - --health-port={{ .Values.node.livenessProbe.healthPort }}
            - --v=2
          resources:
            limits:
              cpu: 100m
              memory: 100Mi
            requests:
              cpu: 10m
              memory: 20Mi
        - name: node-driver-registrar
          image: "{{ .Values.image.nodeDriverRegistrar.repository }}:{{ .Values.image.nodeDriverRegistrar.tag }}"
          args:
            - --csi-address=$(ADDRESS)
            - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
            - --v=2
          lifecycle:
            preStop:
              exec:
                command: ["/bin/sh", "-c", "rm -rf /registration/{{ .Values.driver.name }}-reg.sock /csi/csi.sock"]
          env:
            - name: ADDRESS
              value: /csi/csi.sock
            - name: DRIVER_REG_SOCK_PATH
              value: {{ .Values.linux.kubelet }}/plugins/{{ .Values.driver.name }}/csi.sock
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
            - name: registration-dir
              mountPath: /registration
          resources:
            limits:
              cpu: 100m
              memory: 100Mi
            requests:
              cpu: 10m
              memory: 20Mi
        - name: azuredisk
          image: "{{ .Values.image.azuredisk.repository }}:{{ .Values.image.azuredisk.tag }}"
          args:
            - "--v={{ .Values.node.logLevel }}"
            - "--endpoint=$(CSI_ENDPOINT)"
            - "--nodeid=$(KUBE_NODE_NAME)"
            - "--metrics-address=0.0.0.0:{{ .Values.node.metricsPort }}"
            - "--enable-perf-optimization={{ .Values.linux.enablePerfOptimization }}"
            - "--drivername={{ .Values.driver.name }}"
            - "--volume-attach-limit={{ .Values.driver.volumeAttachLimit }}"
            - "--cloud-config-secret-name={{ .Values.node.cloudConfigSecretName }}"
            - "--cloud-config-secret-namespace={{ .Values.node.cloudConfigSecretNamespace }}"
          ports:
            - containerPort: {{ .Values.node.livenessProbe.healthPort }}
              name: healthz
              protocol: TCP
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthz
              port: healthz
            initialDelaySeconds: 30
            timeoutSeconds: 10
            periodSeconds: 30
          env:
            - name: AZURE_CREDENTIAL_FILE
              valueFrom:
                configMapKeyRef:
                  name: azure-cred-file
                  key: path
                  optional: true
            - name: CSI_ENDPOINT
              value: unix:///csi/csi.sock
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            {{- if eq .Values.cloud "AzureStackCloud" }}
            - name: AZURE_ENVIRONMENT_FILEPATH
              value: /etc/kubernetes/azurestackcloud.json
            {{- end }}
          imagePullPolicy: {{ .Values.image.azuredisk.pullPolicy }}
          securityContext:
            privileged: true
          volumeMounts:
            - mountPath: /csi
              name: socket-dir
            - mountPath: {{ .Values.linux.kubelet }}/
              mountPropagation: Bidirectional
              name: mountpoint-dir
            - mountPath: /etc/kubernetes/
              name: azure-cred
            - mountPath: /var/lib/waagent/ManagedIdentity-Settings
              readOnly: true
              name: msi
            - mountPath: /dev
              name: device-dir
            - mountPath: /sys/bus/scsi/devices
              name: sys-devices-dir
            - mountPath: /sys/class/scsi_host/
              name: scsi-host-dir
            {{- if eq .Values.cloud "AzureStackCloud" }}
            - name: ssl
              mountPath: /etc/ssl/certs
              readOnly: true
            {{- end }}
            {{- if eq .Values.linux.distro "fedora" }}
            - name: ssl
              mountPath: /etc/ssl/certs
              readOnly: true
            - name: ssl-pki
              mountPath: /etc/pki/ca-trust/extracted
              readOnly: true
            {{- end }}
          resources:
            limits:
              cpu: 200m
              memory: 200Mi
            requests:
              cpu: 10m
              memory: 20Mi
      volumes:
        - hostPath:
            path: {{ .Values.linux.kubelet }}/plugins/{{ .Values.driver.name }}
            type: DirectoryOrCreate
          name: socket-dir
        - hostPath:
            path: {{ .Values.linux.kubelet }}/
            type: DirectoryOrCreate
          name: mountpoint-dir
        - hostPath:
            path: {{ .Values.linux.kubelet }}/plugins_registry/
            type: DirectoryOrCreate
          name: registration-dir
        - hostPath:
            path: /etc/kubernetes/
            type: Directory
          name: azure-cred
        - hostPath:
            path: /var/lib/waagent/ManagedIdentity-Settings
          name: msi
        - hostPath:
            path: /dev
            type: Directory
          name: device-dir
        - hostPath:
            path: /sys/bus/scsi/devices
            type: Directory
          name: sys-devices-dir
        - hostPath:
            path: /sys/class/scsi_host/
            type: Directory
          name: scsi-host-dir
        {{- if eq .Values.cloud "AzureStackCloud" }}
        - name: ssl
          hostPath:
            path: /etc/ssl/certs
        {{- end }}
        {{- if eq .Values.linux.distro "fedora" }}
        - name: ssl
          hostPath:
            path: /etc/ssl/certs
        - name: ssl-pki
          hostPath:
            path: /etc/pki/ca-trust/extracted
        {{- end }}
{{- end -}}
