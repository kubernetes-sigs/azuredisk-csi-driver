---
apiVersion: v1
kind: ConfigMap
metadata:
  name: azdiskschedulerextender-config
  namespace: {{ .Release.Namespace }}
data:
  config.yaml: |
    apiVersion: kubescheduler.config.k8s.io/v1alpha1
    kind: KubeSchedulerConfiguration
    schedulerName: azdiskschedulerextender
    algorithmSource:
      policy:
        configMap:
          namespace: {{ .Release.Namespace }}
          name: azdiskschedulerextender-policy
    leaderElection:
      leaderElect: true
      lockObjectName: azdiskschedulerextender
      lockObjectNamespace: {{ .Release.Namespace }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: azdiskschedulerextender-policy
  namespace: {{ .Release.Namespace }}
data:
 policy.cfg : |
  {
    "kind" : "Policy",
    "apiVersion" : "v1",
    "predicates" : [
      {"name" : "PodFitsHostPorts"},
      {"name" : "PodFitsResources"},
      {"name" : "NoDiskConflict"},
      {"name" : "MatchNodeSelector"},
      {"name" : "HostName"}
    ],
    "priorities" : [
      {"name" : "LeastRequestedPriority", "weight" : 1},
      {"name" : "BalancedResourceAllocation", "weight" : 1},
      {"name" : "ServiceSpreadingPriority", "weight" : 1},
      {"name" : "EqualPriority", "weight" : 1}
    ],
    "extenders" : [{
      "urlPrefix": "http://localhost:{{ .Values.schedulerExtender.servicePort }}/azdiskschedulerextender",
      "filterVerb": "filter",
      "prioritizeVerb": "prioritize",
      "weight": 1,
      "enableHttps": false,
      "nodeCacheCapable": false
    }],
    "hardPodAffinitySymmetricWeight" : 10
  }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: azdiskschedulerextender
  namespace: {{ .Release.Namespace }}
  labels:
    app: azdiskschedulerextender
spec:
  replicas: {{ .Values.schedulerExtender.replicas }}
  selector:
    matchLabels:
      app: azdiskschedulerextender
  template:
    metadata:
      labels:
        app: azdiskschedulerextender
    spec:
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.imagePullSecrets | indent 8 }}
      {{- end }}
      serviceAccountName: azdiskschedulerextender
      nodeSelector:
        kubernetes.io/os: linux
        {{- if .Values.controller.runOnMaster}}
        kubernetes.io/role: master
        {{- end}}
      priorityClassName: system-cluster-critical
      tolerations:
        - key: "node-role.kubernetes.io/master"
          operator: "Equal"
          value: "true"
          effect: "NoSchedule"
        - key: "node-role.kubernetes.io/controlplane"
          operator: "Equal"
          value: "true"
          effect: "NoSchedule"
      volumes:
      - name: azdiskschedulerextender-config
        configMap:
          name: azdiskschedulerextender-config
      containers:
      - name: azdiskscheduler-ctr
        image: gcr.io/google_containers/hyperkube:v1.16.3
        imagePullPolicy: IfNotPresent
        args:
        - kube-scheduler
        - --config=/azdiskschedulerextender/config.yaml
        - --v=5
        volumeMounts:
        - name: azdiskschedulerextender-config
          mountPath: /azdiskschedulerextender
      - name: azdiskschedulerextender-ctr
        image: "{{ .Values.image.schedulerExtender.repository }}:{{ .Values.image.schedulerExtender.tag }}"
        imagePullPolicy: {{ .Values.image.schedulerExtender.pullPolicy }}
        args:
        - "--port={{ .Values.schedulerExtender.servicePort }}"
        - "--metrics-address=0.0.0.0:{{ .Values.schedulerExtender.metricsPort}}"
        - "--v=5"
        livenessProbe:
          httpGet:
            path: /ping
            port: extender-port
          failureThreshold: 2
          periodSeconds: 5
        readinessProbe:
          httpGet:
            path: /ping
            port: extender-port
          failureThreshold: 3
          periodSeconds: 10
        startupProbe:
          httpGet:
            path: /ping
            port: extender-port
          failureThreshold: 20
          periodSeconds: 3
        ports:
          - name: extender-port
            containerPort: {{ .Values.schedulerExtender.servicePort }}
            hostPort: {{ .Values.schedulerExtender.servicePort }}
          - name: metrics-port
            containerPort: {{ .Values.schedulerExtender.metricsPort }}
            protocol: TCP